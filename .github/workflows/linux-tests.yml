name: Linux tests

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

concurrency:
  group: linux-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux:
    name: Linux - Py${{ matrix.PYTHON_VERSION }} - USE_CONDA=${{ matrix.USE_CONDA}}
    runs-on: ubuntu-latest
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
      RUNNER_OS: 'ubuntu'
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ['3.9', '3.11']
        USE_CONDA: ['True', 'False']
    timeout-minutes: 15
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Install System Packages
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get install -qq pyqt5-dev-tools libxcb-xinerama0 xterm --fix-missing
      - name: Install Conda
        uses: mamba-org/setup-micromamba@v2
        with:
           environment-name: test
           create-args: python=${{ matrix.PYTHON_VERSION }}
           micromamba-version: '1.5.10-0'
      - name: Install Pixi
        shell: bash -l {0}
        run: |
          # This script installs Pixi in ~/.pixi/bin
          curl -fsSL https://pixi.sh/install.sh | sh
          # This is necessary for envs-manager to detect Pixi
          echo "ENV_BACKEND_EXECUTABLE=$HOME/.pixi/bin/pixi" >> $GITHUB_ENV
      - name: Install package and test dependencies with conda
        if: ${{ startsWith(matrix.USE_CONDA, 'True') }}
        shell: bash -el {0}
        run: |
            micromamba install --file requirements/main.yml
            micromamba install --file requirements/tests.yml
            pip install --no-deps -e .
      - name: Install package and test dependencies with pip
        if: ${{ startsWith(matrix.USE_CONDA, 'False') }}
        shell: bash -el {0}
        run: pip install --pre -e .[test]
      - name: Install Spyder from master branch (Future Spyder 6.1)
        shell: bash -el {0}
        run: |
            pip install --no-deps git+https://github.com/spyder-ide/spyder.git@master
            pip install --no-deps git+https://github.com/spyder-ide/spyder-kernels.git@master
      - name: Install envs-manager from its subrepo
        shell: bash -el {0}
        run: |
            cd external-deps/envs-manager
            pip install -e .
            cd ../..
      - name: Show environment information
        shell: bash -el {0}
        run: |
          micromamba info
          micromamba list
      - name: Run tests
        shell: bash -el {0}
        run: xvfb-run --auto-servernum pytest --ignore=./external-deps --color=yes --cov-report xml --cov=spyder_env_manager -x -vv
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
